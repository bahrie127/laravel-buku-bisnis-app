{
	"info": {
		"_postman_id": "complete-bookkeeping-api-v2",
		"name": "Complete Laravel Bookkeeping API v2",
		"description": "Complete API collection for Laravel Bookkeeping System including Authentication, Accounts, Categories, and Transactions with all CRUD operations, filtering, transfer, and statistics. Updated to match actual controller responses.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "sample_account_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "sample_category_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "sample_transaction_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						},
						"description": "Register a new user. Returns user data without token."
					}
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('access_token', response.token);",
									"    console.log('Token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login"]
						},
						"description": "Login user and get authentication token. Token is automatically saved to collection variables."
					}
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "me"]
						},
						"description": "Get current authenticated user profile information."
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "logout"]
						},
						"description": "Logout user and revoke all authentication tokens."
					}
				}
			]
		},
		{
			"name": "üí∞ Accounts",
			"item": [
				{
					"name": "Get All Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/accounts",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts"]
						},
						"description": "Get all accounts for authenticated user."
					}
				},
				{
					"name": "Search Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/accounts?q=savings",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts"],
							"query": [
								{
									"key": "q",
									"value": "savings",
									"description": "Search by account name"
								}
							]
						},
						"description": "Search accounts by name."
					}
				},
				{
					"name": "Filter Active Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/accounts?is_active=true",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts"],
							"query": [
								{
									"key": "is_active",
									"value": "true",
									"description": "Filter by active status"
								}
							]
						},
						"description": "Filter accounts by active status."
					}
				},
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('sample_account_id', response.data.id);",
									"    console.log('Account ID saved:', response.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Main Savings Account\",\n    \"balance\": 1000.50,\n    \"description\": \"Primary savings account for emergency fund\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/accounts",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts"]
						},
						"description": "Create a new account. Account ID is automatically saved to collection variables."
					}
				},
				{
					"name": "Get Account Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/accounts/{{sample_account_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts", "{{sample_account_id}}"]
						},
						"description": "Get specific account details by ID."
					}
				},
				{
					"name": "Update Account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Savings Account\",\n    \"balance\": 1500.75,\n    \"description\": \"Updated emergency fund account\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/accounts/{{sample_account_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts", "{{sample_account_id}}"]
						},
						"description": "Update an existing account."
					}
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/accounts/{{sample_account_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "accounts", "{{sample_account_id}}"]
						},
						"description": "Delete an account. Account must have no transactions."
					}
				}
			]
		},
		{
			"name": "üìÇ Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/categories",
							"host": ["{{base_url}}"],
							"path": ["api", "categories"]
						},
						"description": "Get all categories for authenticated user."
					}
				},
				{
					"name": "Get Income Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/categories?type=income",
							"host": ["{{base_url}}"],
							"path": ["api", "categories"],
							"query": [
								{
									"key": "type",
									"value": "income",
									"description": "Filter by category type"
								}
							]
						},
						"description": "Get income categories only."
					}
				},
				{
					"name": "Get Expense Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/categories?type=expense",
							"host": ["{{base_url}}"],
							"path": ["api", "categories"],
							"query": [
								{
									"key": "type",
									"value": "expense",
									"description": "Filter by category type"
								}
							]
						},
						"description": "Get expense categories only."
					}
				},
				{
					"name": "Create Parent Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('sample_category_id', response.data.id);",
									"    console.log('Category ID saved:', response.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Food & Dining\",\n    \"type\": \"expense\",\n    \"description\": \"All food related expenses\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/categories",
							"host": ["{{base_url}}"],
							"path": ["api", "categories"]
						},
						"description": "Create a parent category. Category ID is automatically saved to collection variables."
					}
				},
				{
					"name": "Create Subcategory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Restaurants\",\n    \"type\": \"expense\",\n    \"parent_id\": \"{{sample_category_id}}\",\n    \"description\": \"Restaurant meals and dining out\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/categories",
							"host": ["{{base_url}}"],
							"path": ["api", "categories"]
						},
						"description": "Create a subcategory under a parent category."
					}
				},
				{
					"name": "Get Category Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/categories/{{sample_category_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "categories", "{{sample_category_id}}"]
						},
						"description": "Get specific category details by ID."
					}
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Food & Beverages\",\n    \"type\": \"expense\",\n    \"description\": \"All food and beverage expenses\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/categories/{{sample_category_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "categories", "{{sample_category_id}}"]
						},
						"description": "Update an existing category."
					}
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/categories/{{sample_category_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "categories", "{{sample_category_id}}"]
						},
						"description": "Delete a category. Category must have no transactions or subcategories."
					}
				}
			]
		},
		{
			"name": "üí∏ Transactions",
			"item": [
				{
					"name": "Get All Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"]
						},
						"description": "Get all transactions for authenticated user with pagination."
					}
				},
				{
					"name": "Filter by Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions?type=income",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"],
							"query": [
								{
									"key": "type",
									"value": "income",
									"description": "Filter by transaction type (income/expense/transfer)"
								}
							]
						},
						"description": "Filter transactions by type."
					}
				},
				{
					"name": "Filter by Date Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions?from_date=2025-01-01&to_date=2025-01-31",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"],
							"query": [
								{
									"key": "from_date",
									"value": "2025-01-01",
									"description": "Start date (YYYY-MM-DD)"
								},
								{
									"key": "to_date",
									"value": "2025-01-31",
									"description": "End date (YYYY-MM-DD)"
								}
							]
						},
						"description": "Filter transactions by date range."
					}
				},
				{
					"name": "Filter by Account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions?account_id={{sample_account_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"],
							"query": [
								{
									"key": "account_id",
									"value": "{{sample_account_id}}",
									"description": "Filter by account ID"
								}
							]
						},
						"description": "Filter transactions by account."
					}
				},
				{
					"name": "Filter by Category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions?category_id={{sample_category_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"],
							"query": [
								{
									"key": "category_id",
									"value": "{{sample_category_id}}",
									"description": "Filter by category ID"
								}
							]
						},
						"description": "Filter transactions by category."
					}
				},
				{
					"name": "Search Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions?search=grocery",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"],
							"query": [
								{
									"key": "search",
									"value": "grocery",
									"description": "Search in description and notes"
								}
							]
						},
						"description": "Search transactions by description or notes."
					}
				},
				{
					"name": "Create Income Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('sample_transaction_id', response.data.id);",
									"    console.log('Transaction ID saved:', response.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"income\",\n    \"amount\": 5000.00,\n    \"description\": \"Monthly Salary\",\n    \"account_id\": \"{{sample_account_id}}\",\n    \"category_id\": \"{{sample_category_id}}\",\n    \"transaction_date\": \"2025-01-15\",\n    \"notes\": \"Salary deposit for January 2025\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/transactions",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"]
						},
						"description": "Create an income transaction. Transaction ID is automatically saved to collection variables."
					}
				},
				{
					"name": "Create Expense Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"expense\",\n    \"amount\": 125.50,\n    \"description\": \"Grocery Shopping\",\n    \"account_id\": \"{{sample_account_id}}\",\n    \"category_id\": \"{{sample_category_id}}\",\n    \"transaction_date\": \"2025-01-16\",\n    \"notes\": \"Weekly grocery shopping at supermarket\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/transactions",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions"]
						},
						"description": "Create an expense transaction."
					}
				},
				{
					"name": "Create Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"from_account_id\": \"{{sample_account_id}}\",\n    \"to_account_id\": \"{{sample_account_id}}\",\n    \"amount\": 500.00,\n    \"description\": \"Transfer to savings\",\n    \"transaction_date\": \"2025-01-17\",\n    \"notes\": \"Monthly savings transfer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/transactions/transfer",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions", "transfer"]
						},
						"description": "Create a transfer between accounts. Creates two linked transactions."
					}
				},
				{
					"name": "Get Transaction Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions/{{sample_transaction_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions", "{{sample_transaction_id}}"]
						},
						"description": "Get specific transaction details by ID."
					}
				},
				{
					"name": "Update Transaction",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"income\",\n    \"amount\": 5500.00,\n    \"description\": \"Monthly Salary + Bonus\",\n    \"account_id\": \"{{sample_account_id}}\",\n    \"category_id\": \"{{sample_category_id}}\",\n    \"transaction_date\": \"2025-01-15\",\n    \"notes\": \"Salary deposit with performance bonus\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/transactions/{{sample_transaction_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions", "{{sample_transaction_id}}"]
						},
						"description": "Update an existing transaction."
					}
				},
				{
					"name": "Delete Transaction",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions/{{sample_transaction_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions", "{{sample_transaction_id}}"]
						},
						"description": "Delete a transaction."
					}
				}
			]
		},
		{
			"name": "üìä Statistics",
			"item": [
				{
					"name": "Get Overall Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions-statistics",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions-statistics"]
						},
						"description": "Get overall statistics for all transactions."
					}
				},
				{
					"name": "Get Monthly Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions-statistics?from_date=2025-01-01&to_date=2025-01-31",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions-statistics"],
							"query": [
								{
									"key": "from_date",
									"value": "2025-01-01",
									"description": "Start of month"
								},
								{
									"key": "to_date",
									"value": "2025-01-31",
									"description": "End of month"
								}
							]
						},
						"description": "Get statistics for a specific month."
					}
				},
				{
					"name": "Get Statistics by Account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions-statistics?account_id={{sample_account_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions-statistics"],
							"query": [
								{
									"key": "account_id",
									"value": "{{sample_account_id}}",
									"description": "Filter by account ID"
								}
							]
						},
						"description": "Get statistics for a specific account."
					}
				},
				{
					"name": "Get Statistics by Category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions-statistics?category_id={{sample_category_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions-statistics"],
							"query": [
								{
									"key": "category_id",
									"value": "{{sample_category_id}}",
									"description": "Filter by category ID"
								}
							]
						},
						"description": "Get statistics for a specific category."
					}
				},
				{
					"name": "Get Complex Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/transactions-statistics?from_date=2025-01-01&to_date=2025-12-31&account_id={{sample_account_id}}&type=expense",
							"host": ["{{base_url}}"],
							"path": ["api", "transactions-statistics"],
							"query": [
								{
									"key": "from_date",
									"value": "2025-01-01",
									"description": "Start date"
								},
								{
									"key": "to_date",
									"value": "2025-12-31",
									"description": "End date"
								},
								{
									"key": "account_id",
									"value": "{{sample_account_id}}",
									"description": "Filter by account"
								},
								{
									"key": "type",
									"value": "expense",
									"description": "Filter by transaction type"
								}
							]
						},
						"description": "Get statistics with multiple filters applied."
					}
				}
			]
		}
	]
}
