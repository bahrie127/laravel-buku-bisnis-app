{
	"info": {
		"_postman_id": "bukubisnis-api-collection",
		"name": "BukuBisnis API",
		"description": "Complete API collection for BukuBisnis Laravel application with Sanctum authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    pm.test('User registered successfully', function () {",
									"        pm.response.to.have.status(201);",
									"        const response = pm.response.json();",
									"        pm.expect(response.message).to.equal('User registered successfully');",
									"        pm.expect(response.user).to.have.property('id');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": ["{{base_url}}"],
							"path": ["auth", "register"]
						}
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.test('Login successful', function () {",
									"        pm.response.to.have.status(200);",
									"        const response = pm.response.json();",
									"        pm.expect(response.message).to.equal('Login successful');",
									"        pm.expect(response).to.have.property('token');",
									"        ",
									"        // Save token to environment variable",
									"        pm.collectionVariables.set('auth_token', response.token);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": ["{{base_url}}"],
							"path": ["auth", "login"]
						}
					}
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": ["{{base_url}}"],
							"path": ["auth", "me"]
						}
					}
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": ["{{base_url}}"],
							"path": ["auth", "logout"]
						}
					}
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "List Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": ["{{base_url}}"],
							"path": ["accounts"]
						}
					}
				},
				{
					"name": "List Accounts with Filter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts?q=cash&is_active=1",
							"host": ["{{base_url}}"],
							"path": ["accounts"],
							"query": [
								{
									"key": "q",
									"value": "cash"
								},
								{
									"key": "is_active",
									"value": "1"
								}
							]
						}
					}
				},
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    pm.test('Account created successfully', function () {",
									"        pm.response.to.have.status(201);",
									"        const response = pm.response.json();",
									"        pm.expect(response.message).to.equal('Account created successfully');",
									"        pm.expect(response.data).to.have.property('id');",
									"        ",
									"        // Save account ID for future tests",
									"        pm.collectionVariables.set('account_id', response.data.id);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cash Wallet\",\n    \"type\": \"cash\",\n    \"starting_balance\": 1000.00,\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": ["{{base_url}}"],
							"path": ["accounts"]
						}
					}
				},
				{
					"name": "Show Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts/{{account_id}}",
							"host": ["{{base_url}}"],
							"path": ["accounts", "{{account_id}}"]
						}
					}
				},
				{
					"name": "Update Account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Cash Wallet\",\n    \"is_active\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts/{{account_id}}",
							"host": ["{{base_url}}"],
							"path": ["accounts", "{{account_id}}"]
						}
					}
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts/{{account_id}}",
							"host": ["{{base_url}}"],
							"path": ["accounts", "{{account_id}}"]
						}
					}
				}
			]
		}
	]
}
